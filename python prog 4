class Solution:
    def _generate(self, curr_str, open, close, ans, n):
        if open + close == 2 * n and open == close:
            ans.append(curr_str)
            return
        if open > n:
            return
        if close > open:
            return
        self._generate(curr_str + "(", open + 1, close, ans, n)
        self._generate(curr_str + ")", open, close + 1, ans, n)

    def generateParenthesis(self, n):
        ans = []
        curr_str=""
        open=0
        close=0

        self._generate(curr_str, open,close, ans, n)
        return ans
